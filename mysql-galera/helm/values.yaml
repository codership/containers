# Default values for mysql-galera.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Environment for the image (to be set at command line, overrides settings in config map)
# e.g. --set env.WSREP_BOOTSTRAP_FROM="2"
env: {}

# Never go below 3
replicas: 3

image:
  repository: codership/mysql-galera
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Storage class for persistent volume claims, depends on k8s provider
# Available options:
# - minikube
# - efs (Amazon EKS)
storageClass:

# Minimum required resources per pod
resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube.
  # Below are bare minimums, anything less is not guaranteed to work.
  requests:
    memory: 4Gi # 4G is the minimum for MySQL 8.0 to properly function
    cpu: 1
    storage: 2Gi

# Where to expose MySQL client service to outside world
service:
  port: 30006

# Autoscaling should be used with caution as persistent volume claims will
# linger after scale down
autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
