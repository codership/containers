apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mysql-galera.fullname" . }}
  labels:
    app: mysql-galera-app
    #tier: dbms
spec:
  # replication controller
  serviceName: {{ include "mysql-galera.fullname" . }} # must match the headless service name for pod hostname resolution
  replicas: {{ .Values.replicas | default 3 }}
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: mysql-galera-node
      #tier: dbms
  # pod template
  template:
    metadata:
      labels:
        app: mysql-galera-node
        #tier: dbms
    spec: # Pod spec
      imagePullSecrets:
      - name: regcred
      initContainers: # this might be minikube/hostpath-specific
      - name: chown-datadir
        image: busybox:latest
        command:
        - /bin/chown
        - -R
        - "1000"  # or whatever the mysqld UID is, use string "1000" not 1000 due to yaml
        - /var/lib/mysql
        volumeMounts:
        - name: datadir # same as in containers and volumes
          mountPath: /var/lib/mysql
      containers:
      - name: mysql-galera-node
        image: {{ .Values.image.repository | default "codership/mysql-galera" }}:{{ default .Chart.AppVersion .Values.image.tag }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
        # Setting environment variables for the image
        # 1. First get them from ConfigMap
        envFrom:
        - configMapRef:
            name: {{ include "mysql-galera.fullname" . }}-v1
        # 2. Override from command line
        env:
        {{- range $key, $value := .Values.env }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
        # 3. make some internal k8s parameters available to the image
        - name: MEM_REQUEST
          valueFrom:
            resourceFieldRef:
              containerName: mysql-galera-node
              resource: requests.memory
        - name: MEM_LIMIT
          valueFrom:
            resourceFieldRef:
              containerName: mysql-galera-node
              resource: limits.memory
        ports:
        - containerPort: 3306
          name: client
        - containerPort: 4567
          name: replication
        - containerPort: 4568
          name: ist
        - containerPort: 4444
          name: sst
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/mysql # inside container
          readOnly: false
#        livenessProbe:
#          exec:
#            command: ["mysqladmin", "ping"]
#          initialDelaySeconds: 30
#          periodSeconds: 10
#          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: [ sh, /var/lib/mysql/k8s_readiness_probe ]
          initialDelaySeconds: 15
          periodSeconds: 2
          timeoutSeconds: 1
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ ReadWriteMany ]
      storageClassName: {{ include "mysql-galera.fullname" . }}-{{ .Values.storageClass }}-sc
      resources:
        requests:
          storage: {{ .Values.resources.requests.storage }}
